Overview:

This is a project (frontend and backend) that displays the commits history of this same github repository. 

Technology used:

1) Backend: Express Js, Node Js.
2) Frontend: React Js, Next Js, Tailwind.

To download project:

1) Download repository to your local machine

To install projects:

1) Open git-api folder 

2) Install dependecies, using this command (It is the folder where package.json folder is in git-api folder):

npm install or yarn install

3) Open web-app folder 

2) Install dependecies, using this command (It is the folder where package.json folder is in web-app folder):

npm install or yarn install

To run project:

1) First, run the backend. To do it, open a terminal and execute this command on the git-api folder:

node app.js

If you have a personal access token to access to Github API, you can set it as an environment variable:

USER_TOKEN=<paste here your user token> node app.js

2)Then, run the frontend. To do it, open a new terminal and execute this command on the web-app folder:

npx next dev

To open web app:

1) Go to a browser and go to:

http://localhost:3000/

Project details:

Backend:

1) App.js is the main folder, which set the server. 
2) Folder routes contains the route to the commits endpoint. It is defined in another folder and file in order to keep separated code with differente functionality.

Frontend:

1) Pages folder: to keep the different pages the app displays
2) Components folder: to keep the isolated components used on the pages; 
3) Services folder: to keep the logic to call external API (in this case to the Node JS API)
4) utils folder: to keep utility functions to use in the app.
5) At page folder, it has index.js file, which contains the page to load as root of the webpage. If you want to add more pages (/users/ for example), you have to create a folder called user, and then add a index.js as a default page (This is Next js working).
6) At components in /layout/MainLayout, it is defined a component that defines a layout to be shared in the app. It is used in the all the pages (seted in _app.js file).
7) Each element has 'className' attribute with differente clases. It is because this project uses Tailwind to add style to elements.